- id: coffee_maker_shutdown_timer
  alias: Kahvinkeittimen sammutusajastin
  trigger:
    - entity_id: switch.kahvinkeitin
      platform: state
      to: "on"
      for:
        minutes: 30
  action:
    - service: switch.turn_off
      entity_id: switch.kahvinkeitin
    - service: script.sonos_tts_notification
      data:
        player_location: "media_player.olohuone"
        message_str: >
          Sammutin kahvinkeittimen.

- id: coffee_brewed_notification
  alias: "Kahvin valmistumisilmoitus"
  trigger:
    - entity_id: binary_sensor.coffee_is_brewing
      platform: state
      to: "off"
  condition:
    - condition: state
      entity_id: switch.kahvinkeitin
      state: "on"
  action:
    - service: script.sonos_tts_notification
      data:
        player_location: "media_player.olohuone"
        message_str: >
          Kahvi on valmista.
    - condition: numeric_state
      entity_id: sensor.electricity_saving_requirement
      above: 2
    - service: switch.turn_off
      entity_id: switch.kahvinkeitin
    - service: script.sonos_tts_notification
      data:
        player_location: "media_player.olohuone"
        message_str: >
          Sammutin kahvinkeittimen, sillä sähkö on nyt kallista.

- id: coffee_maker_autostart
  alias: "Kahvinkeittimen automaattikäynnistys"
  trigger:
    - platform: state
      entity_id: input_select.home_mode
      to: "Awake"
      from: "Asleep"
  condition:
    - condition: state
      entity_id: group.master_warning
      state: "off"
    - condition: state
      entity_id: input_boolean.coffee_maker_loaded
      state: "on"
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.coffee_maker_loaded
    - service: switch.turn_on
      entity_id: switch.kahvinkeitin

- id: sonos_autostop_at_night
  alias: "Sonoksen automaattistop kun yö"
  trigger:
    - platform: state
      entity_id: input_select.home_mode
      to: "Asleep"
  condition:
    - condition: state
      entity_id: media_player.olohuone
      state: "playing"
  action:
    - service: media_player.media_stop
      entity_id: media_player.olohuone

- id: away_mode_switches_turn_off
  alias: "Turn off switches on away mode"
  trigger:
    - platform: state
      entity_id: input_select.home_mode
      to: "Away"
  action:
    - service: switch.turn_off
      entity_id: switch.kahvinkeitin
    - service: switch.turn_off
      entity_id: switch.tp_link_smart_plug_5f83

- alias: "Detect bedroom humidifier emptiness"
  trigger:
    - platform: state
      entity_id: sensor.bedroom_humidifier_status
      to: "standby"
      for:
        minutes: 4
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.bedroom_humidifier_automations
    - service: switch.turn_off
      entity_id: switch.tp_link_smart_plug_5f83
    - service: input_boolean.turn_on
      entity_id: input_boolean.bedroom_humidifier_empty

- alias: "Reset bedroom humidifier emptiness status"
  trigger:
    - platform: state
      entity_id: input_boolean.bedroom_humidifier_automations
      to: "on"
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.bedroom_humidifier_empty

- alias: "Turn off bedroom humidifier when automation turns off"
  trigger:
    - platform: state
      entity_id: input_boolean.bedroom_humidifier_automations
      to: "off"
  action:
    - service: switch.turn_off
      entity_id: switch.tp_link_smart_plug_5f83

- alias: "Autostart bedroom humidifier"
  trigger:
    - platform: time_pattern
      minutes: "/2"
  condition:
    - condition: state
      entity_id: input_boolean.bedroom_humidifier_automations
      state: "on"
    - condition: state
      entity_id: switch.tp_link_smart_plug_5f83
      state: "off"
    - condition: state
      entity_id: binary_sensor.sahkon_suhteellinen_hinta_korkea
      state: "off"
    - condition: numeric_state
      entity_id: sensor.electricity_saving_requirement
      below: 2
    - condition: numeric_state
      entity_id: sensor.bedroom_bt_sensor_humidity
      below: input_number.bedroom_humidifier_start_point
    - condition: state
      entity_id: binary_sensor.parvekkeen_ovi_sensor_state_door_window_2
      state: "off"
    - or:
      - condition: state
        entity_id: input_select.home_mode
        state: "Awake"
      - condition: state
        entity_id: input_select.home_mode
        state: "Asleep"
  action:
    - service: switch.turn_on
      target:
        entity_id: switch.tp_link_smart_plug_5f83

- alias: "Autostop bedroom humidifier"
  trigger:
    - platform: time_pattern
      minutes: "/2"
  condition:
    - condition: state
      entity_id: input_boolean.bedroom_humidifier_automations
      state: "on"
    - condition: state
      entity_id: switch.tp_link_smart_plug_5f83
      state: "on"
    - or:
      - condition: numeric_state
        entity_id: sensor.bedroom_bt_sensor_humidity
        above: input_number.bedroom_humidifier_stop_point
      - condition: state
        entity_id: binary_sensor.sahkon_suhteellinen_hinta_korkea
        state: "on"
      - condition: numeric_state
        entity_id: sensor.electricity_saving_requirement
        above: 1
      - condition: state
        entity_id: binary_sensor.parvekkeen_ovi_sensor_state_door_window_2
        state: "on"
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.tp_link_smart_plug_5f83

- alias: "Ensure bedroom humidifier hysteresis when increasing start point"
  trigger:
    - platform: state
      entity_id: input_number.bedroom_humidifier_start_point
  condition:
    - condition: template
      value_template: "{{ states('input_number.bedroom_humidifier_stop_point') | int - states('input_number.bedroom_humidifier_start_point') | int < 2 }}"
  action:
    - service: input_number.set_value
      target:
        entity_id: input_number.bedroom_humidifier_stop_point
      data:
        value: "{{ states('input_number.bedroom_humidifier_start_point') | int + 2 }}"

- alias: "Ensure bedroom humidifier hysteresis when decreasing stop point"
  trigger:
    - platform: state
      entity_id: input_number.bedroom_humidifier_stop_point
  condition:
    - condition: template
      value_template: "{{ states('input_number.bedroom_humidifier_stop_point') | int - states('input_number.bedroom_humidifier_start_point') | int < 2 }}"
  action:
    - service: input_number.set_value
      target:
        entity_id: input_number.bedroom_humidifier_start_point
      data:
        value: "{{ states('input_number.bedroom_humidifier_stop_point') | int - 2 }}"

- id: start_charging_living_room_tablet
  alias: "Olohuoneen tabletin latauksen käynnistys"
  trigger:
    - platform: time_pattern
      minutes: "/2"
  condition:
    - condition: numeric_state
      entity_id: sensor.olohuoneen_tablet_battery_level
      below: 51
    - condition: state
      entity_id: switch.telldus_socket_and_energy_meter
      state: "off"
    - or:
      - condition: state
        entity_id: binary_sensor.sahkon_suhteellinen_hinta_korkea
        state: "off"
      - condition: numeric_state
        entity_id: sensor.olohuoneen_tablet_battery_level
        below: 31
  action:
    - service: switch.turn_on
      target:
        entity_id: switch.telldus_socket_and_energy_meter

- id: stop_charging_living_room_tablet
  alias: "Olohuoneen tabletin latauksen lopetus"
  trigger:
    - platform: time_pattern
      minutes: "/2"
  condition:
    - condition: numeric_state
      entity_id: sensor.olohuoneen_tablet_battery_level
      above: 49
    - condition: state
      entity_id: switch.telldus_socket_and_energy_meter
      state: "on"
    - or:
      - condition: numeric_state
        entity_id: sensor.olohuoneen_tablet_battery_level
        above: 79
      - condition: state
        entity_id: binary_sensor.sahkon_suhteellinen_hinta_korkea
        state: "on"
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.telldus_socket_and_energy_meter

- alias: "Send SCFB CH1 KP on change"
  trigger:
    - platform: state
      entity_id: input_number.scfb_ch1_kp
  action:
    - service: mqtt.publish
      data:
        topic: "fancontrolbridge/commands"
        payload_template: '{"command": "SET_KP", "channel": 1, "value": {{ states("input_number.scfb_ch1_kp") }} }'
        qos: 1
        retain: 0

- alias: "Send SCFB CH1 KI on change"
  trigger:
    - platform: state
      entity_id: input_number.scfb_ch1_ki
  action:
    - service: mqtt.publish
      data:
        topic: "fancontrolbridge/commands"
        payload_template: '{"command": "SET_KI", "channel": 1, "value": {{ states("input_number.scfb_ch1_ki") }} }'
        qos: 1
        retain: 0

- alias: "Send SCFB CH1 KD on change"
  trigger:
    - platform: state
      entity_id: input_number.scfb_ch1_kd
  action:
    - service: mqtt.publish
      data:
        topic: "fancontrolbridge/commands"
        payload_template: '{"command": "SET_KD", "channel": 1, "value": {{ states("input_number.scfb_ch1_kd") }} }'
        qos: 1
        retain: 0

- alias: "Send SCFB CH1 Target on change"
  trigger:
    - platform: state
      entity_id: input_number.scfb_ch1_target
  action:
    - service: mqtt.publish
      data:
        topic: "fancontrolbridge/commands"
        payload_template: '{"command": "SET_TARGET", "channel": 1, "value": {{ states("input_number.scfb_ch1_target") }} }'
        qos: 1
        retain: 0

- alias: "Send SCFB CH2 KP on change"
  trigger:
    - platform: state
      entity_id: input_number.scfb_ch2_kp
  action:
    - service: mqtt.publish
      data:
        topic: "fancontrolbridge/commands"
        payload_template: '{"command": "SET_KP", "channel": 2, "value": {{ states("input_number.scfb_ch2_kp") }} }'
        qos: 1
        retain: 0

- alias: "Send SCFB CH2 KI on change"
  trigger:
    - platform: state
      entity_id: input_number.scfb_ch2_ki
  action:
    - service: mqtt.publish
      data:
        topic: "fancontrolbridge/commands"
        payload_template: '{"command": "SET_KI", "channel": 2, "value": {{ states("input_number.scfb_ch2_ki") }} }'
        qos: 1
        retain: 0

- alias: "Send SCFB CH2 KD on change"
  trigger:
    - platform: state
      entity_id: input_number.scfb_ch2_kd
  action:
    - service: mqtt.publish
      data:
        topic: "fancontrolbridge/commands"
        payload_template: '{"command": "SET_KD", "channel": 2, "value": {{ states("input_number.scfb_ch2_kd") }} }'
        qos: 1
        retain: 0

- alias: "Send SCFB CH2 Target on change"
  trigger:
    - platform: state
      entity_id: input_number.scfb_ch2_target
  action:
    - service: mqtt.publish
      data:
        topic: "fancontrolbridge/commands"
        payload_template: '{"command": "SET_TARGET", "channel": 2, "value": {{ states("input_number.scfb_ch2_target") }} }'
        qos: 1
        retain: 0

- alias: "Send FCB test CH1 KP on change"
  trigger:
    - platform: state
      entity_id: input_number.fcb_test_ch1_kp
  action:
    - service: mqtt.publish
      data:
        topic: "fancontrolbridge/test/commands"
        payload_template: '{"command": "SET_KP", "channel": 1, "value": {{ states("input_number.fcb_test_ch1_kp") }} }'
        qos: 1
        retain: 0

- alias: "Send FCB test CH1 KI on change"
  trigger:
    - platform: state
      entity_id: input_number.fcb_test_ch1_ki
  action:
    - service: mqtt.publish
      data:
        topic: "fancontrolbridge/test/commands"
        payload_template: '{"command": "SET_KI", "channel": 1, "value": {{ states("input_number.fcb_test_ch1_ki") }} }'
        qos: 1
        retain: 0

- alias: "Send FCB test CH1 KD on change"
  trigger:
    - platform: state
      entity_id: input_number.fcb_test_ch1_kd
  action:
    - service: mqtt.publish
      data:
        topic: "fancontrolbridge/test/commands"
        payload_template: '{"command": "SET_KD", "channel": 1, "value": {{ states("input_number.fcb_test_ch1_kd") }} }'
        qos: 1
        retain: 0

- alias: "Send FCB test CH1 TARGET on change"
  trigger:
    - platform: state
      entity_id: input_number.fcb_test_ch1_target
  action:
    - service: mqtt.publish
      data:
        topic: "fancontrolbridge/test/commands"
        payload_template: '{"command": "SET_TARGET", "channel": 1, "value": {{ states("input_number.fcb_test_ch1_target") }} }'
        qos: 1
        retain: 0

- alias: "Turn off living room HiFi"
  trigger:
    - platform: time_pattern
      minutes: "/2"
  condition:
    - condition: state
      entity_id: switch.living_room_entertainment_switch
      state: "on"
      for:
        minutes: 15
    - condition: state
      entity_id: binary_sensor.living_room_hifi_on
      state: "off"
      for:
        minutes: 15
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.living_room_entertainment_switch
