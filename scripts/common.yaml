test_living_room_announcer:
  sequence:
    - service: script.sonos_tts_notification
      data:
        player_location: "media_player.olohuone"
        message_str: >
          Kello on {{ now().strftime("%H:%M") }}.

sonos_tts_notification:
  alias: "Sonos TTS script"
  sequence:
    - service: sonos.snapshot
      data:
        entity_id: "{{ player_location }}"
    - service: media_player.unjoin
      data:
        entity_id: "{{ player_location }}"
    - delay: "00:00:02"
    - service: media_player.volume_set
      data:
        entity_id: "{{ player_location }}"
        volume_level: "{{ states('input_number.default_notification_volume_sonos')|float }}"
    - service: tts.cloud_say
      data:
        entity_id: "{{ player_location }}"
        message: "{{ message_str }}"
        options:
          gender: female
        language: fi-FI
    - delay: "00:00:02"
    - wait_template: '{{ not is_state(player_location, "playing") }}'
      timeout: "00:00:30"
      continue_on_timeout: true
    - service: sonos.restore
      data:
        entity_id: "{{ player_location }}"

fcb_test_command:
  alias: "Send FCB test Command"
  sequence:
    - service: mqtt.publish
      data:
        topic: "fancontrolbridge/test/commands"
        payload: "{\"command\": \"{{ cmd }}\", \"channel\": {{ ch }}, \"value\": {{ val }} }"
        qos: 1
        retain: 0

scfb_command:
  alias: "Send SCFB Command"
  sequence:
    - service: mqtt.publish
      data:
        topic: "fancontrolbridge/commands"
        payload: "{\"command\": \"{{ cmd }}\", \"channel\": {{ ch }}, \"value\": {{ val }} }"
        qos: 1
        retain: 0
